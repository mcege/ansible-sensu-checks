#!/usr/bin/env ruby
#
#encoding: UTF-8

require 'rubygems' if RUBY_VERSION < '1.9.0'
require 'sensu-handler'
require 'bunny'
require 'json'
require 'date'

class FMDaemonHandler < Sensu::Handler
  def handle
    alert(@event)
  end
end

  def alert(event)
      
      STDOUT.sync = true
    
      connection = Bunny.new(:host => "{{ sensu_checks_rabbitmq_host }}", :vhost => "/{{ sensu_checks_rabbitmq_vhost }}", :user => "{{ sensu_checks_rabbitmq_user }}", :password => "{{ sensu_checks_rabbitmq_password }}")
      connection.start
    
      channel = connection.create_channel
      exchange = channel.fanout("{{ sensu_checks_rabbitmq_queue_name }}", :durable => true)

      timestampf = ((@event['timestamp']).to_f * 1000).to_i

      event_as_json = {:alarmedResource => @event['client']['name'], :hostname => @event['client']['name'], :alarmKey => @event['check']['name'].to_s + "-" + @event['check']['status'].to_s, :timestamp => timestampf, :status => @event['check']['status'], :description => @event['check']['output'], :command => @event['check']['command'], :tenant => "tt"}
      event = JSON[event_as_json]

      exchange.publish(event, :routing_key => "{{ sensu_checks_rabbitmq_queue_name }}", :content_type => "application/json")
      
      connection.close
end